{
    "type": [
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.4.2 (2024-10-31 ucrt) -- \"Pile of Leaves\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(Directional)",
        "\nDirectional: 7.1\n",
        " _ _ _\n|  _ _ \\\n| |   | |   _    _        _ _ _ _    _ _ _ _      _      _    _ _ _ _    _ _ _ _    _ _ _ _      _ \n| |   | |  |_|  | |_ _   |   __  |  |  _ _ _\\   _| |_   |_|  |  _ _  |  /  _ _  \\  /  _ _  \\    | |\n| |   | |   _   |  _ _\\  |  _ _ _|  | |        |_   _|   _   | |   | |  | |   | |  | |   | |    | |\n| |_ _| |  | |  | |      |  \\_ _    | |_ _ _     | |_   | |  | |_ _| |  | |   | |  | |_ _| \\_   | |\n|_ _ _ /   |_|  |_|       \\_ _ _\\   |_ _ _ _/    |_ _\\  |_|  |_ _ _ _|  |_|   |_|  \\_ _ _ _ _/  |_|\n",
        "> ",
        "circexp.mle",
        "function(x, rads = FALSE, tol = 1e-06) {\n  if ( !rads )   x <- x * pi/180\n  n <- length(x)\n  sx <- sum(x)\n  fun <- function(lam, n, sx)  n * log(lam) - lam * sx - sum( log( 1 - exp(-2 * pi * lam) ) )\n  mod <- optimise(fun, c(0.00001, 1000), n = n, sx = sx, tol = tol)\n  list(loglik = mod$objective, lambda = mod$maximum)\n}\n<bytecode: 0x0000020297eb1c50>\n<environment: namespace:Directional>\n",
        "> ",
        "circbeta.mle",
        "function(x, rads = FALSE) {\n  if ( !rads )   x <- x * pi/180\n  n <- length(x)\n\n  fun <- function(par, x) {\n    m <- cos(par[1])\n    a <- exp(par[2])\n    b <- exp(par[3])\n    con <- cos(x - m)\n    den <-  -(a + b) * log(2) - lbeta(a, b) + (a - 0.5) * log1p(con) + (b - 0.5) * log(1 - con)\n    -sum(den)\n  }\n\n  qa <- optim( c( mean(x), rnorm(2) ), x = x, control = list(maxit = 5000) )\n  qa <- optim( qa$par, rnorm(2), x = x, control = list(maxit = 5000) )\n  param <- c( cos(qa$par[1]), exp(qa$par[2]), exp(qa$par[3]) )\n",
        "  names(param) <- c(\"mean\", \"alpha\", \"beta\")\n  list( loglik = -qa$value, param = param)\n}\n<bytecode: 0x0000020297eaa6e8>\n<environment: namespace:Directional>\n",
        "> ",
        "mmvm.mle",
        "function(x, N, rads = FALSE) {\n  if ( !rads )  x <- x * pi/180\n  n <- length(x)\n\n  likel <- function(par, x, N, n) {\n    m <- par[1]  ;  k <- exp(par[2])\n    - k * sum( cos(N * (x - m) ) ) + n * log(2 * pi) + n * ( log( besselI(k, 0, expon.scaled = TRUE) ) - k )\n  }\n\n  qa <- optim( c(mean(x), 1), likel, x = x, N = N, n = n, control = list(maxit = 5000), method = \"BFGS\" )\n  list(mu = qa$par[1], kappa = exp(qa$par[2]), loglik = -qa$value )\n}\n<bytecode: 0x0000020297ec9e58>\n<environment: namespace:Directional>\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(MLE)",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Error: package or namespace load failed for ‘MLE’ in apply(!is.na(db), 1L, all):\n INTEGER() can only be applied to a 'integer', not a 'unknown type #29'\n",
        "In addition: ",
        "Warning message:\n",
        "In apply(!is.na(db), 1L, all) :",
        " type 29 is unimplemented in 'type2char'\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(MLE)",
        "> ",
        "Rfast::binom.mle",
        "function (x, N = NULL, tol = 1e-07) \n{\n    if (!is.null(N)) {\n        if (length(N) == 1) {\n            p <- sum(x)/length(x)/N\n        }\n        else p <- sum(x)/sum(N)\n        loglik <- sum(dbinom(x, N, p, log = TRUE))\n        res <- list(loglik = loglik, prob = p)\n    }\n    else {\n        n <- length(x)\n        k <- max(x)\n        sx <- sum(x)\n        p <- sx/n/k\n        x1 <- x - 1\n        y <- k - x1\n        derk <- n * digamma(k + 1) - sum(digamma(y)) + n * log(1 - \n            p)\n        derp <- sx/p + (sx - n * k)/(1 - p)\n",
        "        derk2 <- n * trigamma(k + 1) - sum(trigamma(y))\n        derp2 <- -sx/p^2 + (sx - n * k)/(1 - p)^2\n        derkp <- -n/(1 - p)\n        aold <- c(k, p)\n        anew <- aold - c(derp2 * derk - derkp * derp, -derkp * \n            derk + derk2 * derp)/(derk2 * derp2 - derkp^2)\n        i <- 2\n        while (sum(abs(aold - anew)) > tol) {\n            i <- i + 1\n            aold <- anew\n            k <- aold[1]\n            p <- aold[2]\n            y <- k - x1\n            derk <- n * digamma(k + 1) - sum(digamma(y)) + n * \n",
        "                log(1 - p)\n            derp <- sx/p + (sx - n * k)/(1 - p)\n            derk2 <- n * trigamma(k + 1) - sum(trigamma(y))\n            derp2 <- -sx/p^2 + (sx - n * k)/(1 - p)^2\n            derkp <- -n/(1 - p)\n            anew <- aold - c(derp2 * derk - derkp * derp, -derkp * \n                derk + derk2 * derp)/(derk2 * derp2 - derkp^2)\n        }\n        k <- round(anew[1])\n        p <- anew[2]\n        loglik <- sum(dbinom(x, k, p, log = TRUE))\n        names(anew) <- c(\"Number of trials\", \"probability\")\n",
        "        res <- list(iters = i, loglik = loglik, param = anew)\n    }\n    res\n}\n<bytecode: 0x000001e616bf7b60>\n<environment: namespace:Rfast>\n",
        "> ",
        "Rfast::betageom.mle",
        "function (x, tol = 1e-07) \n{\n    n <- length(x)\n    m1 <- sum(x)/n\n    m2 <- sum(x^2)/n\n    b <- abs(2 * (m2 - m1^2)/(m2 - m1 - 2 * m1^2))\n    a <- abs(m1 * (b - 1))\n    lik1 <- sum(lbeta(a + 1, b + x)) - n * lbeta(a, b)\n    ya <- a + x\n    y <- ya + b + 1\n    com <- n * digamma(a + b) - sum(Digamma(y))\n    dera <- sum(Rfast::Digamma(ya)) + com - n * digamma(a)\n    derb <- n * digamma(b + 1) + com - n * digamma(b)\n    derab <- n * trigamma(a + b) - sum(Rfast::Trigamma(y))\n    dera2 <- sum(Rfast::Trigamma(ya)) + derab - n * trigamma(a)\n",
        "    derb2 <- n * trigamma(b + 1) + derab - n * trigamma(b)\n    aold <- c(a, b)\n    anew <- aold - c(derb2 * dera - derab * derb, -derab * dera + \n        dera2 * derb)/(dera2 * derb2 - derab^2)\n    a <- anew[1]\n    b <- anew[2]\n    lik2 <- sum(lbeta(a + 1, b + x)) - n * lbeta(a, b)\n    i <- 2\n    while (abs(lik2 - lik1) > tol) {\n        i <- i + 1\n        lik1 <- lik2\n        aold <- anew\n        a <- aold[1]\n        b <- aold[2]\n        ya <- a + x\n        y <- ya + b + 1\n        com <- n * digamma(a + b) - sum(Digamma(y))\n",
        "        dera <- sum(Rfast::Digamma(ya)) + com - n * digamma(a)\n        derb <- n * digamma(b + 1) + com - n * digamma(b)\n        derab <- n * trigamma(a + b) - sum(Rfast::Trigamma(y))\n        dera2 <- sum(.Call(\"Rfast_Trigamma\", PACKAGE = \"Rfast\", \n            ya)) + derab - n * trigamma(a)\n        derb2 <- n * trigamma(b + 1) + derab - n * trigamma(b)\n        anew <- aold - c(derb2 * dera - derab * derb, -derab * \n            dera + dera2 * derb)/(dera2 * derb2 - derab^2)\n        a <- anew[1]\n        b <- anew[2]\n",
        "        lik2 <- sum(lbeta(a + 1, b + x)) - n * lbeta(a, b)\n    }\n    names(anew) <- c(\"alpha\", \"beta\")\n    list(iters = i, loglik = lik2, param = anew)\n}\n<bytecode: 0x000001e616c2db88>\n<environment: namespace:Rfast>\n",
        "> ",
        "?betageom.mle",
        "> ",
        "library(Rfast)",
        "Loading required package: Rcpp\n",
        "Loading required package: RcppZiggurat\n",
        "Loading required package: RcppParallel\n",
        "\nAttaching package: ‘RcppParallel’\n\n",
        "The following object is masked from ‘package:Rcpp’:\n\n    LdFlags\n\n",
        "\nRfast: 2.1.4\n",
        " ___ __ __ __ __    __ __ __ __ __ _             _               __ __ __ __ __     __ __ __ __ __ __   \n|  __ __ __ __  |  |  __ __ __ __ _/            / \\             |  __ __ __ __ /   /__ __ _   _ __ __\\  \n| |           | |  | |                         / _ \\            | |                        / /          \n| |           | |  | |                        / / \\ \\           | |                       / /          \n| |           | |  | |                       / /   \\ \\          | |                      / /          \n| |__ __ __ __| |  | |__ __ __ __           / /     \\ \\         | |__ __ __ __ _        / /__/\\          \n|    __ __ __ __|  |  __ __ __ __|         / /__ _ __\\ \\        |_ __ __ __ _   |      / ___  /           \n|   \\              | |                    / _ _ _ _ _ _ \\                     | |      \\/  / /       \n| |\\ \\             | |                   / /           \\ \\                    | |         / /          \n| | \\ \\            | |                  / /             \\ \\                   | |        / /          \n| |  \\ \\           | |                 / /               \\ \\                  | |       / /          \n| |   \\ \\__ __ _   | |                / /                 \\ \\     _ __ __ __ _| |      / /          \n|_|    \\__ __ __\\  |_|               /_/                   \\_\\   /_ __ __ __ ___|      \\/             team\n",
        "\nAttaching package: ‘Rfast’\n\n",
        "The following object is masked from ‘package:MLE’:\n\n    ordinal.mle\n\n",
        "The following objects are masked from ‘package:Directional’:\n\n    acg.mle, circlin.cor, colvm.mle, colwatsons, dirknn, iag.mle, kuiper, mediandir, multivmf.mle,\n    racg, rbingham, rvmf, rvonmises, spml.mle, spml.reg, spml.regs, vmf.mle, watson, wrapcauchy.mle\n\n",
        "> ",
        "x=rnbinom(100,10,0.4)",
        "> ",
        "betageom.mle(x)",
        "Error in while (abs(lik2 - lik1) > tol) { : \n  missing value where TRUE/FALSE needed\n",
        "In addition: ",
        "Warning messages:\n",
        "1: ",
        "In lbeta(a + 1, b + x) :",
        " NaNs produced\n",
        "2: ",
        "In lbeta(a, b) :",
        " NaNs produced\n",
        "> ",
        "rgeom",
        "function (n, prob) \n.Call(C_rgeom, n, prob)\n<bytecode: 0x000001e69fe82fc0>\n<environment: namespace:stats>\n",
        "> ",
        "prob=rbeta(100,0.3,5)",
        "> ",
        "x=rgeom(100,prob)",
        "> ",
        "betageom.mle(x)",
        "$iters\n[1] 34\n\n$loglik\n[1] -1866754467\n\n$param\n       alpha         beta \n2.664406e+11 1.285448e+05 \n\n",
        "> ",
        "prob",
        "  [1] 1.823918e-04 4.387790e-03 2.026329e-03 7.167409e-03 5.025462e-01 1.537849e-06 2.788009e-04 5.915750e-02\n  [9] 4.234732e-03 2.010600e-01 4.116025e-01 6.863595e-02 5.278263e-02 3.470575e-02 6.457162e-07 1.953414e-02\n [17] 1.227007e-01 3.352603e-04 2.477720e-04 7.245723e-05 2.648725e-02 1.341141e-03 1.386700e-04 3.828618e-03\n [25] 1.280926e-02 1.336679e-02 2.503432e-03 5.387941e-02 3.479743e-04 8.978408e-02 1.716288e-01 2.905254e-03\n [33] 1.117652e-04 1.763050e-03 4.056704e-01 3.422128e-04 1.044407e-06 4.948211e-03",
        " 3.149965e-04 3.180255e-04\n [41] 1.278393e-02 2.183548e-02 9.261452e-02 3.433390e-01 3.189020e-02 1.857876e-02 9.333705e-03 4.550802e-03\n [49] 3.161868e-02 9.476161e-02 2.849075e-02 4.387168e-02 7.483500e-03 3.556353e-03 1.998178e-04 2.927926e-03\n [57] 2.294510e-02 1.011777e-04 2.216285e-02 1.796227e-01 1.346306e-02 1.105735e-02 2.949004e-02 3.457486e-05\n [65] 1.490794e-08 1.657095e-01 4.636471e-02 1.832099e-02 6.884581e-03 8.746897e-03 9.697593e-02 3.980685e-02\n [73] 1.222303e-02 5.410946e-02 1.147518e-02 1.253165e-01",
        " 5.946287e-02 5.879239e-08 9.263417e-09 5.341424e-04\n [81] 1.920349e-01 1.612346e-02 3.864372e-01 2.154967e-01 5.441813e-03 1.905465e-01 1.169245e-01 8.638053e-02\n [89] 5.141122e-03 1.319531e-03 4.094412e-04 2.856329e-02 8.267809e-04 1.402919e-01 1.608360e-03 8.822918e-03\n [97] 5.985192e-02 2.116875e-01 1.485601e-02 1.744227e-01\n",
        "> ",
        "prob=rbeta(100,3,5)",
        "> ",
        "prob",
        "  [1] 0.07505531 0.41689302 0.59937661 0.36315501 0.35549052 0.61076447 0.12757744 0.30826780 0.51792778\n [10] 0.66776312 0.38495808 0.11299833 0.25952086 0.59528183 0.55962848 0.56905162 0.42013204 0.28751890\n [19] 0.69014025 0.26544144 0.16720567 0.55681774 0.26081084 0.49654946 0.16056622 0.23410055 0.26451335\n [28] 0.15529733 0.20715186 0.22404045 0.38613804 0.16539464 0.35467053 0.43779917 0.47603881 0.14736202\n [37] 0.51310271 0.34088120 0.16308203 0.41771563 0.40400118 0.40654144 0.36098450 0.55176499",
        " 0.57853230\n [46] 0.62005513 0.19543032 0.25145203 0.63014211 0.58710427 0.23802340 0.47600543 0.45018253 0.23671770\n [55] 0.79508061 0.48980413 0.36012861 0.20325365 0.65746122 0.31680356 0.39359434 0.36624446 0.35778748\n [64] 0.42232531 0.37162837 0.41957134 0.52937559 0.61476614 0.06169271 0.40951732 0.16219435 0.26839342\n [73] 0.49768155 0.46875514 0.20628572 0.10942274 0.19897956 0.52866865 0.28499462 0.24658485 0.46886015\n [82] 0.40510839 0.62842891 0.19112118 0.66095463 0.41125534 0.33058693 0.49038716",
        " 0.21022458 0.32983672\n [91] 0.46309070 0.11961674 0.49178549 0.30707950 0.31508998 0.20220467 0.16733543 0.48988811 0.55063392\n[100] 0.73864144\n",
        "> ",
        "x=rgeom(100,prob)",
        "> ",
        "betageom.mle(x)",
        "$iters\n[1] 7\n\n$loglik\n[1] -254.1871\n\n$param\n   alpha     beta \n5.624973 3.051633 \n\n",
        "> ",
        ".colbetageom.mle <- function(x, tol) {",
        "+ ",
        "  n <- dim(x)[2]",
        "+ ",
        "  res <- matrix(nrow = n, ncol = 4)",
        "+ ",
        "  for ( i in 1:n )  res[i, ] <- unlist( Rfast::betageom.mle(x[, i], tol) )",
        "+ ",
        "  colnames(res) <- c('iters', 'loglik', 'alpha', 'beta')",
        "+ ",
        "  res",
        "+ ",
        "}",
        "> ",
        ".colbetageom.mle(as.matrix(x), tol=1e-6)",
        "     iters    loglik    alpha     beta\n[1,]     7 -254.1871 5.624973 3.051633\n",
        "> ",
        "Rfast::betabinom.mle",
        "function (x, N, tol = 1e-07) \n{\n    x1 <- x\n    x2 <- N - x\n    z1 <- Rfast::sort_unique(x1)\n    n1 <- as.vector(table(x1))\n    z2 <- Rfast::sort_unique(x2)\n    n2 <- as.vector(table(x2))\n    n <- length(x1)\n    m1 <- sum(x1)/n\n    m2 <- sum(x1^2)/n\n    down <- N * m2/m1 - N * m1 - N + m1\n    a <- (N * m1 - m2)/down\n    b <- (N - m1) * (N - m2/m1)/down\n    a <- abs(a)\n    b <- abs(b)\n    co <- -n * digamma(N + a + b) + n * digamma(a + b)\n    dera <- sum(digamma(z1 + a) * n1) + co - n * digamma(a)\n    derb <- sum(digamma(z2 + b) * n2) + co - n * digamma(b)\n",
        "    derab <- -n * trigamma(N + a + b) + n * trigamma(a + b)\n    dera2 <- sum(trigamma(z1 + a) * n1) + derab - n * trigamma(a)\n    derb2 <- sum(trigamma(z2 + b) * n2) + derab - n * trigamma(b)\n    aold <- c(a, b)\n    anew <- aold - c(derb2 * dera - derab * derb, -derab * dera + \n        dera2 * derb)/(dera2 * derb2 - derab^2)\n    i <- 2\n    while (sum(abs(aold - anew)) > tol) {\n        i <- i + 1\n        aold <- anew\n        a <- anew[1]\n        b <- anew[2]\n        co <- -n * digamma(N + a + b) + n * digamma(a + b)\n",
        "        dera <- sum(digamma(z1 + a) * n1) + co - n * digamma(a)\n        derb <- sum(digamma(z2 + b) * n2) + co - n * digamma(b)\n        derab <- -n * trigamma(N + a + b) + n * trigamma(a + \n            b)\n        dera2 <- sum(trigamma(z1 + a) * n1) + derab - n * trigamma(a)\n        derb2 <- sum(trigamma(z2 + b) * n2) + derab - n * trigamma(b)\n        anew <- aold - c(derb2 * dera - derab * derb, -derab * \n            dera + dera2 * derb)/(dera2 * derb2 - derab^2)\n    }\n    a <- anew[1]\n    b <- anew[2]\n    loglik <- n * Rfast::Lgamma(N + 1) - sum(Rfast::Lgamma(z1 + \n",
        "        1) * n1) - sum(Rfast::Lgamma(z2 + 1) * n2) + sum(Rfast::Lgamma(z1 + \n        a) * n1) + sum(Rfast::Lgamma(z2 + b) * n2) - n * lgamma(N + \n        a + b) - n * lbeta(a, b)\n    pa <- c(a, b)\n    names(pa) <- c(\"alpha\", \"beta\")\n    list(iters = i, param = pa, loglik = loglik)\n}\n<bytecode: 0x000001e616c3a300>\n<environment: namespace:Rfast>\n\nRestarting R session...\n\n",
        "> ",
        "library(MLE)",
        "> ",
        ".colbetabinom.mle",
        "Error: object '.colbetabinom.mle' not found\n",
        "> ",
        "Rfast::betabinom.mle",
        "function (x, N, tol = 1e-07) \n{\n    x1 <- x\n    x2 <- N - x\n    z1 <- Rfast::sort_unique(x1)\n    n1 <- as.vector(table(x1))\n    z2 <- Rfast::sort_unique(x2)\n    n2 <- as.vector(table(x2))\n    n <- length(x1)\n    m1 <- sum(x1)/n\n    m2 <- sum(x1^2)/n\n    down <- N * m2/m1 - N * m1 - N + m1\n    a <- (N * m1 - m2)/down\n    b <- (N - m1) * (N - m2/m1)/down\n    a <- abs(a)\n    b <- abs(b)\n    co <- -n * digamma(N + a + b) + n * digamma(a + b)\n    dera <- sum(digamma(z1 + a) * n1) + co - n * digamma(a)\n    derb <- sum(digamma(z2 + b) * n2) + co - n * digamma(b)\n",
        "    derab <- -n * trigamma(N + a + b) + n * trigamma(a + b)\n    dera2 <- sum(trigamma(z1 + a) * n1) + derab - n * trigamma(a)\n    derb2 <- sum(trigamma(z2 + b) * n2) + derab - n * trigamma(b)\n    aold <- c(a, b)\n    anew <- aold - c(derb2 * dera - derab * derb, -derab * dera + \n        dera2 * derb)/(dera2 * derb2 - derab^2)\n    i <- 2\n    while (sum(abs(aold - anew)) > tol) {\n        i <- i + 1\n        aold <- anew\n        a <- anew[1]\n        b <- anew[2]\n        co <- -n * digamma(N + a + b) + n * digamma(a + b)\n",
        "        dera <- sum(digamma(z1 + a) * n1) + co - n * digamma(a)\n        derb <- sum(digamma(z2 + b) * n2) + co - n * digamma(b)\n        derab <- -n * trigamma(N + a + b) + n * trigamma(a + \n            b)\n        dera2 <- sum(trigamma(z1 + a) * n1) + derab - n * trigamma(a)\n        derb2 <- sum(trigamma(z2 + b) * n2) + derab - n * trigamma(b)\n        anew <- aold - c(derb2 * dera - derab * derb, -derab * \n            dera + dera2 * derb)/(dera2 * derb2 - derab^2)\n    }\n    a <- anew[1]\n    b <- anew[2]\n    loglik <- n * Rfast::Lgamma(N + 1) - sum(Rfast::Lgamma(z1 + \n",
        "        1) * n1) - sum(Rfast::Lgamma(z2 + 1) * n2) + sum(Rfast::Lgamma(z1 + \n        a) * n1) + sum(Rfast::Lgamma(z2 + b) * n2) - n * lgamma(N + \n        a + b) - n * lbeta(a, b)\n    pa <- c(a, b)\n    names(pa) <- c(\"alpha\", \"beta\")\n    list(iters = i, param = pa, loglik = loglik)\n}\n<bytecode: 0x000002129aafb588>\n<environment: namespace:Rfast>\n\nRestarting R session...\n\n",
        "> ",
        "library(MLE)",
        "> ",
        "Rfast::expmle",
        "function (x) \n{\n    n <- length(x)\n    lambda <- sum(x)/n\n    loglik <- -n * log(lambda) - n\n    list(loglik = loglik, lambda = lambda)\n}\n<bytecode: 0x0000015f1d3fee08>\n<environment: namespace:Rfast>\n",
        "> ",
        "x <- rexp(1000,3)",
        "> ",
        "expmle(x)",
        "$loglik\n[1] 118.8149\n\n$lambda\n[1] 0.3266667\n\n",
        "> ",
        "sum(dexp(x, 0.326667, log=T))",
        "[1] -1225.525\n",
        "> ",
        "sum(dexp(x, 1/0.326667, log=T))",
        "[1] 118.8149\n",
        "> ",
        "gammamle",
        "function (x, tol = 1e-09) \n{\n    n <- length(x)\n    m <- sum(x)/n\n    slx <- sum(log(x))/n\n    s <- log(m) - slx\n    a1 <- 3 - s + sqrt((s - 3)^2 + 24 * s)\n    a1 <- a1/(12 * s)\n    a2 <- a1 - (log(a1) - digamma(a1) - s)/(1/a1 - trigamma(a1))\n    i <- 2\n    while (abs(a2 - a1) > tol) {\n        i <- i + 1\n        a1 <- a2\n        a2 <- a1 - (log(a1) - digamma(a1) - s)/(1/a1 - trigamma(a1))\n    }\n    b <- a2/m\n    loglik <- -b * n * m + (a2 - 1) * n * slx + n * a2 * log(b) - \n        n * lgamma(a2)\n    param <- c(a2, b)\n",
        "    names(param) <- c(\"shape\", \"rate\")\n    list(iters = i, loglik = loglik, param = param)\n}\n<bytecode: 0x0000015f1c674a20>\n<environment: namespace:Rfast>\n",
        "> ",
        "gammamle(x)",
        "$iters\n[1] 5\n\n$loglik\n[1] 118.819\n\n$param\n   shape     rate \n1.003586 3.072202 \n\n\nRestarting R session...\n\n"
    ]
}